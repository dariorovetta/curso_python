from utilidades_extra import tirar_dado

# JUEGO DE POKEMON


# Creamos la clase Pokemon
class Pokemon:
    def __init__(self, nombre, ataque):
        self.nombre = nombre
        self.ataque = ataque
        self.vida = 100

    def gano(self):
        print(f"{self.nombre} ¡Gano esta batalla! ")
        print("¡Más suerte la próxima vez!")


# Creamos nuestros Pokemon
p1 = Pokemon("Pikachu", 60)
p2 = Pokemon("Bulbasur", 55)

# Inicializamos los valores y el turno
p1.vida = 100
p2.vida = 100
turno = tirar_dado(2)

print("¡Se ha iniciado la Batalla!\n")
print(f"{p1.nombre} se enfrenta a {p2.nombre}\n")
# La letra f al inicio se utiliza para extraer los valores de las llaves

# Creamos el ciclo mientras
while p1.vida >= 0 and p2.vida >= 0:
    if turno == 1:
        p2.vida = p2.vida - p1.ataque
        turno = 2
        print(f"{p1.nombre} ataca, {p2.nombre} ahora tiene {p2.vida} de vida")
        print("\n===PROXIMA RONDA===")
    else:
        p1.vida = p1.vida - p2.ataque
        turno = 1
        print(f"{p2.nombre} ataca, {p1.nombre} ahora tiene {p1.vida} de vida")
        print("\n===PROXIMA RONDA===")

# Consultamos si el Pokemon 1 perdió
if p1.vida <= 0:
    p2.gano()
else:  # Sino significa que el Pokemon 1 gano
    p1.gano()


# TARES
# 1 Agregar un ciclo infinito que nos permita iniciar más batallas
# 2 Agregar más Pokemons y permitir al usuario elegir cuál utilizar
# 3 No pueden usar el mismo pokemon los 2 jugadores

# Opcional:
# Agregar clases a los pokemon (Tierra, Electricidad, Fuego, Agua)
# y darle a cada clase superioridad ante otras clases
# por ejemplo, si Pokemon 1 es de agua, y Pokemon 2 es de fuego
# que el Pokemon 1 le reste ataque * 1.5
# así mismo que el Pokemon 2 le reste solo ataque menos el 25%
